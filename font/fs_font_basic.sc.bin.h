static const uint8_t fs_font_basic_sc[10155] =
{
	0x46, 0x53, 0x48, 0x08, 0x01, 0x83, 0xf2, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x27, // FSH............'
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x36, 0x30, 0x0a, 0x23, // ..#version 460.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // Lod      texture
	0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, // Lod.#define text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, // ure2DGrad     te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, // xtureGrad.#defin
	0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x4c, // e texture2DProjL
	0x6f, 0x64, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x4c, // od  textureProjL
	0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // od.#define textu
	0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, 0x74, 0x65, 0x78, // re2DProjGrad tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, // tureProjGrad.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, // fine textureCube
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, // Lod    textureLo
	0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // d.#define textur
	0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // eCubeGrad   text
	0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, // ureGrad.#define 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // texture3D       
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, //   texture.#defin
	0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x0a, 0x23, // e attribute in.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x69, // define varying i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, // n.#define bgfxSh
	0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adow2D(_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, //  _coord)     vec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // 4_splat(texture(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, // )).#define bgfxS
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, // hadow2DProj(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x76, 0x65, // pler, _coord) ve
	0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // c4_splat(texture
	0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // Proj(_sampler, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x29, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, // coord)).varying 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x76, // vec4 v_color0;.v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x74, 0x65, // arying vec4 v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, // xcoord0;.vec3 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // stMul(vec3 _vec,
	0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  mat3 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, // turn ( (_vec) * 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // (_mtx) ); }.vec3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, //  instMul(mat3 _m
	0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, // tx, vec3 _vec) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  return ( (_mtx)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, //  * (_vec) ); }.v
	0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, // ec4 instMul(vec4
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, //  _vec, mat4 _mtx
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, // ) { return ( (_v
	0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, // ec) * (_mtx) ); 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, // }.vec4 instMul(m
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // at4 _mtx, vec4 _
	0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, // vec) { return ( 
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, // (_mtx) * (_vec) 
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, // ); }.float rcp(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _a) { retur
	0x6e, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // n 1.0/_a; }.vec2
	0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, //  rcp(vec2 _a) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, // return vec2(1.0)
	0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, // /_a; }.vec3 rcp(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // vec3 _a) { retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, // n vec3(1.0)/_a; 
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // }.vec4 rcp(vec4 
	0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // _a) { return vec
	0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 4(1.0)/_a; }.vec
	0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, // 2 vec2_splat(flo
	0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _x) { return 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // vec2(_x, _x); }.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // vec3 vec3_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // rn vec3(_x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, // _x); }.vec4 vec4
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, //  { return vec4(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // x, _x, _x, _x); 
	0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, // }.mat4 mtxFromRo
	0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // ws(vec4 _0, vec4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, //  _1, vec4 _2, ve
	0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c4 _3).{.return 
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x74, 0x78, //  _3);.}.mat4 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x30, // FromCols(vec4 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // , vec4 _1, vec4 
	0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // _2, vec4 _3).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, // eturn transpose(
	0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, // mat4(_0, _1, _2,
	0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, //  _3) );.}.mat3 m
	0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // txFromRows(vec3 
	0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, // _0, vec3 _1, vec
	0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, // 3 _2).{.return m
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, // at3(_0, _1, _2);
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, // .}.mat3 mtxFromC
	0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ols(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, // .return transpos
	0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // e(mat3(_0, _1, _
	0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // 2) );.}.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, // vec4 u_viewRect;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // viewTexel;.unifo
	0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, // rm mat4 u_view;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, // uniform mat4 u_i
	0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // nvView;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // mat4 u_proj;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, // form mat4 u_invP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, // roj;.uniform mat
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // 4 u_viewProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // iform mat4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ViewProj;.unifor
	0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, // m mat4 u_model[3
	0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // 2];.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  u_modelView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, // iform mat4 u_mod
	0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // elViewProj;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, // orm vec4 u_alpha
	0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, // Ref4;.vec4 encod
	0x65, 0x52, 0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, // eRE8(float _r).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, // .float exponent 
	0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x5f, 0x72, 0x29, 0x20, // = ceil(log2(_r) 
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, // );.return vec4(_
	0x72, 0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, // r / exp2(exponen
	0x74, 0x29, 0x0a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, // t)., 0.0., 0.0.,
	0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, //  (exponent + 128
	0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, // .0) / 255.0.);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, // .float decodeRE8
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // (vec4 _re8).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, // oat exponent = _
	0x72, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, // re8.w * 255.0 - 
	0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, // 128.0;.return _r
	0x65, 0x38, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, // e8.x * exp2(expo
	0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x65, 0x6e, // nent);.}.vec4 en
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x47, 0x42, 0x45, 0x38, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // codeRGBE8(vec3 _
	0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x67, 0x62, 0x65, // rgb).{.vec4 rgbe
	0x38, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, // 8;.float maxComp
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, // onent = max(max(
	0x5f, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x29, 0x2c, // _rgb.x, _rgb.y),
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  _rgb.z);.float 
	0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, // exponent = ceil(
	0x6c, 0x6f, 0x67, 0x32, 0x28, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, // log2(maxComponen
	0x74, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, // t) );.rgbe8.xyz 
	0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, // = _rgb / exp2(ex
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, // ponent);.rgbe8.w
	0x20, 0x3d, 0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, //  = (exponent + 1
	0x32, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x3b, 0x0a, 0x72, // 28.0) / 255.0;.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x65, 0x38, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // eturn rgbe8;.}.v
	0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x47, 0x42, 0x45, 0x38, 0x28, // ec3 decodeRGBE8(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // vec4 _rgbe8).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, // loat exponent = 
	0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, // _rgbe8.w * 255.0
	0x20, 0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, //  - 128.0;.vec3 r
	0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, // gb = _rgbe8.xyz 
	0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, // * exp2(exponent)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, // ;.return rgb;.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, // vec3 encodeNorma
	0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // lUint(vec3 _norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, // al).{.return _no
	0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, // rmal * 0.5 + 0.5
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, // ;.}.vec3 decodeN
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // ormalUint(vec3 _
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // encodedNormal).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // .return _encoded
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, // Normal * 2.0 - 1
	0x2e, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, // .0;.}.vec2 encod
	0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, // eNormalSphereMap
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // (vec3 _normal).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // .return normaliz
	0x65, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, // e(_normal.xy) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2a, // sqrt(_normal.z *
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, //  0.5 + 0.5);.}.v
	0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ec3 decodeNormal
	0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, // SphereMap(vec2 _
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // encodedNormal).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x7a, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // .float zz = dot(
	0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, // _encodedNormal, 
	0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x20, // _encodedNormal) 
	0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, // * 2.0 - 1.0;.ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // urn vec3(normali
	0x7a, 0x65, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, // ze(_encodedNorma
	0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, // l.xy) * sqrt(1.0
	0x20, 0x2d, 0x20, 0x7a, 0x7a, 0x2a, 0x7a, 0x7a, 0x29, 0x2c, 0x20, 0x7a, 0x7a, 0x29, 0x3b, 0x0a, //  - zz*zz), zz);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, // }.vec2 octahedro
	0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x29, // nWrap(vec2 _val)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // .{.return (1.0 -
	0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x2e, 0x79, 0x78, 0x29, 0x20, 0x29, 0x0a, //  abs(_val.yx) ).
	0x2a, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // * mix(vec2_splat
	0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, // (-1.0), vec2_spl
	0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x67, 0x72, // at(1.0), vec2(gr
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, // eaterThanEqual(_
	0x76, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, // val.xy, vec2_spl
	0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // at(0.0) ) ) );.}
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, // .vec2 encodeNorm
	0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x76, 0x65, 0x63, // alOctahedron(vec
	0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x6e, 0x6f, // 3 _normal).{._no
	0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2f, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, // rmal /= abs(_nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, // mal.x) + abs(_no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, // rmal.y) + abs(_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ormal.z);._norma
	0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // l.xy = _normal.z
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  >= 0.0 ? _norma
	0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, // l.xy : octahedro
	0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, // nWrap(_normal.xy
	0x29, 0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, // );._normal.xy = 
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, // _normal.xy * 0.5
	0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, //  + 0.5;.return _
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // normal.xy;.}.vec
	0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x63, // 3 decodeNormalOc
	0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x65, // tahedron(vec2 _e
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, // ncodedNormal).{.
	0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, // _encodedNormal =
	0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, //  _encodedNormal 
	0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, // * 2.0 - 1.0;.vec
	0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // 3 normal;.normal
	0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, // .z = 1.0 - abs(_
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, // encodedNormal.x)
	0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, //  - abs(_encodedN
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ormal.y);.normal
	0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, // .xy = normal.z >
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // = 0.0 ? _encoded
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, // Normal.xy : octa
	0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, // hedronWrap(_enco
	0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x72, // dedNormal.xy);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // eturn normalize(
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // normal);.}.vec3 
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x76, // convertRGB2XYZ(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, // ec3 _rgb).{.vec3
	0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, //  xyz;.xyz.x = do
	0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x34, 0x31, 0x32, 0x34, 0x35, 0x36, 0x34, // t(vec3(0.4124564
	0x2c, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x37, 0x35, 0x37, 0x36, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x31, // , 0.3575761, 0.1
	0x38, 0x30, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, // 804375), _rgb);.
	0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, // xyz.y = dot(vec3
	0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, // (0.2126729, 0.71
	0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x30, // 51522, 0.0721750
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, // ), _rgb);.xyz.z 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x31, 0x39, // = dot(vec3(0.019
	0x33, 0x33, 0x33, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x39, 0x31, 0x39, 0x32, 0x30, 0x2c, // 3339, 0.1191920,
	0x20, 0x30, 0x2e, 0x39, 0x35, 0x30, 0x33, 0x30, 0x34, 0x31, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, //  0.9503041), _rg
	0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // b);.return xyz;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, // }.vec3 convertXY
	0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, // Z2RGB(vec3 _xyz)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, // .{.vec3 rgb;.rgb
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x20, 0x33, // .x = dot(vec3( 3
	0x2e, 0x32, 0x34, 0x30, 0x34, 0x35, 0x34, 0x32, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x33, 0x37, // .2404542, -1.537
	0x31, 0x33, 0x38, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x35, 0x33, 0x31, 0x34, // 1385, -0.4985314
	0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, // ), _xyz);.rgb.y 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x39, 0x36, // = dot(vec3(-0.96
	0x39, 0x32, 0x36, 0x36, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x38, 0x37, 0x36, 0x30, 0x31, 0x30, 0x38, // 92660, 1.8760108
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x31, 0x35, 0x35, 0x36, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x78, // , 0.0415560), _x
	0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // yz);.rgb.z = dot
	0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x36, 0x34, 0x33, 0x34, // (vec3( 0.0556434
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x30, 0x34, 0x30, 0x32, 0x35, 0x39, 0x2c, 0x20, 0x31, 0x2e, // , -0.2040259, 1.
	0x30, 0x35, 0x37, 0x32, 0x32, 0x35, 0x32, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, // 0572252), _xyz);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return rgb;.}.v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, // ec3 convertXYZ2Y
	0x78, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, // xy(vec3 _xyz).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, // float inv = 1.0/
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, // dot(_xyz, vec3(1
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x3b, // .0, 1.0, 1.0) );
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x79, // .return vec3(_xy
	0x7a, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x2a, 0x69, 0x6e, 0x76, 0x2c, // z.y, _xyz.x*inv,
	0x20, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x2a, 0x69, 0x6e, 0x76, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  _xyz.y*inv);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, // vec3 convertYxy2
	0x58, 0x59, 0x5a, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, // XYZ(vec3 _Yxy).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, // .vec3 xyz;.xyz.x
	0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, //  = _Yxy.x*_Yxy.y
	0x2f, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, // /_Yxy.z;.xyz.y =
	0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, //  _Yxy.x;.xyz.z =
	0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, //  _Yxy.x*(1.0 - _
	0x59, 0x78, 0x79, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x29, 0x2f, // Yxy.y - _Yxy.z)/
	0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, // _Yxy.z;.return x
	0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, // yz;.}.vec3 conve
	0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x78, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // rtRGB2Yxy(vec3 _
	0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // rgb).{.return co
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, 0x28, 0x63, 0x6f, 0x6e, // nvertXYZ2Yxy(con
	0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x5f, 0x72, 0x67, 0x62, // vertRGB2XYZ(_rgb
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, // ) );.}.vec3 conv
	0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, // ertYxy2RGB(vec3 
	0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // _Yxy).{.return c
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, // onvertXYZ2RGB(co
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x5f, 0x59, 0x78, // nvertYxy2XYZ(_Yx
	0x79, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, // y) );.}.vec3 con
	0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x75, 0x76, 0x28, 0x76, 0x65, 0x63, 0x33, // vertRGB2Yuv(vec3
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x75, //  _rgb).{.vec3 yu
	0x76, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // v;.yuv.x = dot(_
	0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, // rgb, vec3(0.299,
	0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x29, 0x20, 0x29, //  0.587, 0.114) )
	0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, // ;.yuv.y = (_rgb.
	0x78, 0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, 0x2a, 0x30, 0x2e, 0x37, 0x31, 0x33, // x - yuv.x)*0.713
	0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x20, 0x3d, 0x20, //  + 0.5;.yuv.z = 
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, // (_rgb.z - yuv.x)
	0x2a, 0x30, 0x2e, 0x35, 0x36, 0x34, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, // *0.564 + 0.5;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // turn yuv;.}.vec3
	0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x75, 0x76, 0x32, 0x52, 0x47, 0x42, 0x28, //  convertYuv2RGB(
	0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, // vec3 _yuv).{.vec
	0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, // 3 rgb;.rgb.x = _
	0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x34, 0x30, 0x33, 0x2a, 0x28, 0x5f, // yuv.x + 1.403*(_
	0x79, 0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, // yuv.y-0.5);.rgb.
	0x79, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x33, // y = _yuv.x - 0.3
	0x34, 0x34, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, // 44*(_yuv.y-0.5) 
	0x2d, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x34, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x2d, // - 0.714*(_yuv.z-
	0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x79, // 0.5);.rgb.z = _y
	0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, 0x37, 0x33, 0x2a, 0x28, 0x5f, 0x79, // uv.x + 1.773*(_y
	0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // uv.z-0.5);.retur
	0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // n rgb;.}.vec3 co
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, 0x28, 0x76, 0x65, 0x63, // nvertRGB2YIQ(vec
	0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x79, // 3 _rgb).{.vec3 y
	0x69, 0x71, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // iq;.yiq.x = dot(
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, // vec3(0.299, 0.58
	0x37, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x20, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // 7, 0.114 ), _rgb
	0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, // );.yiq.y = dot(v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x39, 0x35, 0x37, 0x31, 0x36, 0x2c, 0x20, 0x2d, 0x30, // ec3(0.595716, -0
	0x2e, 0x32, 0x37, 0x34, 0x34, 0x35, 0x33, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x33, 0x32, 0x31, 0x32, // .274453, -0.3212
	0x36, 0x33, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, // 63), _rgb);.yiq.
	0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, // z = dot(vec3(0.2
	0x31, 0x31, 0x34, 0x35, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x32, 0x32, 0x35, 0x39, 0x31, // 11456, -0.522591
	0x2c, 0x20, 0x30, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x33, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, // , 0.311135), _rg
	0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, // b);.return yiq;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x49, // }.vec3 convertYI
	0x51, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, // Q2RGB(vec3 _yiq)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, // .{.vec3 rgb;.rgb
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, // .x = dot(vec3(1.
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, 0x36, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x32, 0x31, // 0, 0.9563, 0.621
	0x30, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, // 0), _yiq);.rgb.y
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, //  = dot(vec3(1.0,
	0x20, 0x2d, 0x30, 0x2e, 0x32, 0x37, 0x32, 0x31, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x36, 0x34, 0x37, //  -0.2721, -0.647
	0x34, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, // 4), _yiq);.rgb.z
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, //  = dot(vec3(1.0,
	0x20, 0x2d, 0x31, 0x2e, 0x31, 0x30, 0x37, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x37, 0x30, 0x34, 0x36, //  -1.1070, 1.7046
	0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ), _yiq);.return
	0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x4c, //  rgb;.}.vec3 toL
	0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // inear(vec3 _rgb)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, // .{.return pow(ab
	0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // s(_rgb), vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // lat(2.2) );.}.ve
	0x63, 0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x76, 0x65, 0x63, 0x34, // c4 toLinear(vec4
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  _rgba).{.return
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x5f, //  vec4(toLinear(_
	0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, // rgba.xyz), _rgba
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, // .w);.}.vec3 toLi
	0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, // nearAccurate(vec
	0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // 3 _rgb).{.vec3 l
	0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, // o = _rgb / 12.92
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, // ;.vec3 hi = pow(
	0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, //  (_rgb + 0.055) 
	0x2f, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // / 1.055, vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, // lat(2.4) );.vec3
	0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, 0x20, 0x6c, //  rgb = mix(hi, l
	0x6f, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, // o, vec3(lessThan
	0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // Equal(_rgb, vec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x20, // _splat(0.04045) 
	0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, // ) ) );.return rg
	0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, // b;.}.vec4 toLine
	0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // arAccurate(vec4 
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // _rgba).{.return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, // vec4(toLinearAcc
	0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, // urate(_rgba.xyz)
	0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // , _rgba.w);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, // oat toGamma(floa
	0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, // t _r).{.return p
	0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, // ow(abs(_r), 1.0/
	0x32, 0x2e, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, // 2.2);.}.vec3 toG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, // amma(vec3 _rgb).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, // {.return pow(abs
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // (_rgb), vec3_spl
	0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // at(1.0/2.2) );.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x65, // .vec4 toGamma(ve
	0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c4 _rgba).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // rn vec4(toGamma(
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // _rgba.xyz), _rgb
	0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, // a.w);.}.vec3 toG
	0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, // ammaAccurate(vec
	0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, // 3 _rgb).{.vec3 l
	0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, // o = _rgb * 12.92
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, // ;.vec3 hi = pow(
	0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // abs(_rgb), vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, // splat(1.0/2.4) )
	0x20, 0x2a, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, //  * 1.055 - 0.055
	0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ;.vec3 rgb = mix
	0x28, 0x68, 0x69, 0x2c, 0x20, 0x6c, 0x6f, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6c, 0x65, // (hi, lo, vec3(le
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, // ssThanEqual(_rgb
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, // , vec3_splat(0.0
	0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, // 031308) ) ) );.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // eturn rgb;.}.vec
	0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, // 4 toGammaAccurat
	0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, // e(vec4 _rgba).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, // return vec4(toGa
	0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, // mmaAccurate(_rgb
	0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, // a.xyz), _rgba.w)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, // ;.}.vec3 toReinh
	0x61, 0x72, 0x64, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, // ard(vec3 _rgb).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, // .return toGamma(
	0x5f, 0x72, 0x67, 0x62, 0x2f, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2b, 0x76, 0x65, 0x63, 0x33, 0x5f, // _rgb/(_rgb+vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, // splat(1.0) ) );.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, // }.vec4 toReinhar
	0x64, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, // d(vec4 _rgba).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x52, 0x65, // return vec4(toRe
	0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, // inhard(_rgba.xyz
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // ), _rgba.w);.}.v
	0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, // ec3 toFilmic(vec
	0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x3d, // 3 _rgb).{._rgb =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, //  max(vec3_splat(
	0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // 0.0), _rgb - 0.0
	0x30, 0x34, 0x29, 0x3b, 0x0a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, // 04);._rgb = (_rg
	0x62, 0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, // b*(6.2*_rgb + 0.
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x36, 0x2e, // 5) ) / (_rgb*(6.
	0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, 0x29, 0x20, 0x2b, 0x20, // 2*_rgb + 1.7) + 
	0x30, 0x2e, 0x30, 0x36, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, // 0.06);.return _r
	0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, // gb;.}.vec4 toFil
	0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, // mic(vec4 _rgba).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, // {.return vec4(to
	0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, // Filmic(_rgba.xyz
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // ), _rgba.w);.}.v
	0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, // ec3 toAcesFilmic
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // (vec3 _rgb).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x61, 0x61, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x35, 0x31, 0x66, 0x3b, 0x0a, // oat aa = 2.51f;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x62, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x66, // float bb = 0.03f
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x63, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x34, // ;.float cc = 2.4
	0x33, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x64, 0x20, 0x3d, 0x20, 0x30, // 3f;.float dd = 0
	0x2e, 0x35, 0x39, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x65, 0x20, 0x3d, // .59f;.float ee =
	0x20, 0x30, 0x2e, 0x31, 0x34, 0x66, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, //  0.14f;.return c
	0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x61, 0x61, 0x2a, 0x5f, // lamp((_rgb*(aa*_
	0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x62, 0x62, 0x29, 0x20, 0x29, 0x2f, 0x28, 0x5f, 0x72, 0x67, // rgb + bb) )/(_rg
	0x62, 0x2a, 0x28, 0x63, 0x63, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x64, 0x64, 0x29, // b*(cc*_rgb + dd)
	0x20, 0x2b, 0x20, 0x65, 0x65, 0x29, 0x20, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, //  + ee) , 0.0, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, // 0);.}.vec4 toAce
	0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, // sFilmic(vec4 _rg
	0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, // ba).{.return vec
	0x34, 0x28, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, // 4(toAcesFilmic(_
	0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, // rgba.xyz), _rgba
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x75, 0x6d, 0x61, // .w);.}.vec3 luma
	0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // (vec3 _rgb).{.fl
	0x6f, 0x61, 0x74, 0x20, 0x79, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, // oat yy = dot(vec
	0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, // 3(0.2126729, 0.7
	0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, // 151522, 0.072175
	0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 0), _rgb);.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x79, 0x79, 0x29, // n vec3_splat(yy)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x76, 0x65, // ;.}.vec4 luma(ve
	0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // c4 _rgba).{.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, // rn vec4(luma(_rg
	0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // ba.xyz), _rgba.w
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, // );.}.vec3 conSat
	0x42, 0x72, 0x69, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, // Bri(vec3 _rgb, v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, // ec3 _csb).{.vec3
	0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x5f, 0x63, //  rgb = _rgb * _c
	0x73, 0x62, 0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, // sb.z;.rgb = mix(
	0x6c, 0x75, 0x6d, 0x61, 0x28, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, // luma(rgb), rgb, 
	0x5f, 0x63, 0x73, 0x62, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, // _csb.y);.rgb = m
	0x69, 0x78, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, // ix(vec3_splat(0.
	0x35, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x78, 0x29, // 5), rgb, _csb.x)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, // ;.return rgb;.}.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x76, // vec4 conSatBri(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ec4 _rgba, vec3 
	0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // _csb).{.return v
	0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x5f, 0x72, // ec4(conSatBri(_r
	0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x2c, 0x20, // gba.xyz, _csb), 
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, // _rgba.w);.}.vec3
	0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, //  posterize(vec3 
	0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, // _rgb, float _num
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // Colors).{.return
	0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x5f, 0x6e, 0x75, 0x6d, //  floor(_rgb*_num
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, // Colors) / _numCo
	0x6c, 0x6f, 0x72, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, // lors;.}.vec4 pos
	0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, // terize(vec4 _rgb
	0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, // a, float _numCol
	0x6f, 0x72, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, // ors).{.return ve
	0x63, 0x34, 0x28, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x72, 0x67, // c4(posterize(_rg
	0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, // ba.xyz, _numColo
	0x72, 0x73, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, // rs), _rgba.w);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, // .vec3 sepia(vec3
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, //  _rgb).{.vec3 co
	0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, // lor;.color.x = d
	0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, // ot(_rgb, vec3(0.
	0x33, 0x39, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x36, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, // 393, 0.769, 0.18
	0x39, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x20, 0x3d, 0x20, // 9) );.color.y = 
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, // dot(_rgb, vec3(0
	0x2e, 0x33, 0x34, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x38, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x31, // .349, 0.686, 0.1
	0x36, 0x38, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x20, 0x3d, // 68) );.color.z =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, //  dot(_rgb, vec3(
	0x30, 0x2e, 0x32, 0x37, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x33, 0x34, 0x2c, 0x20, 0x30, 0x2e, // 0.272, 0.534, 0.
	0x31, 0x33, 0x31, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // 131) );.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x65, 0x70, // olor;.}.vec4 sep
	0x69, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, // ia(vec4 _rgba).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x73, 0x65, 0x70, // .return vec4(sep
	0x69, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, // ia(_rgba.xyz), _
	0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // rgba.w);.}.vec3 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x76, 0x65, 0x63, // blendOverlay(vec
	0x33, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x62, // 3 _base, vec3 _b
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x74, 0x20, // lend).{.vec3 lt 
	0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, // = 2.0 * _base * 
	0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x74, 0x65, // _blend;.vec3 gte
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x28, //  = 1.0 - 2.0 * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - _base) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x72, // 1.0 - _blend);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x74, 0x2c, 0x20, 0x67, 0x74, // eturn mix(lt, gt
	0x65, 0x2c, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // e, step(vec3_spl
	0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, // at(0.5), _base) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, // );.}.vec4 blendO
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x62, 0x61, 0x73, // verlay(vec4 _bas
	0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, // e, vec4 _blend).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x6c, // {.return vec4(bl
	0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x5f, 0x62, 0x61, 0x73, 0x65, // endOverlay(_base
	0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x2e, 0x78, 0x79, 0x7a, // .xyz, _blend.xyz
	0x29, 0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // ), _base.w);.}.v
	0x65, 0x63, 0x33, 0x20, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x48, 0x75, 0x65, 0x28, 0x76, 0x65, // ec3 adjustHue(ve
	0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c3 _rgb, float _
	0x68, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x69, 0x71, 0x20, // hue).{.vec3 yiq 
	0x3d, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, // = convertRGB2YIQ
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, // (_rgb);.float an
	0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x5f, 0x68, 0x75, 0x65, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, // gle = _hue + ata
	0x6e, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x7a, 0x2c, 0x20, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x29, 0x3b, // n(yiq.z, yiq.y);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x6e, // .float len = len
	0x67, 0x74, 0x68, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // gth(yiq.yz);.ret
	0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x49, 0x51, 0x32, 0x52, // urn convertYIQ2R
	0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x78, 0x2c, 0x20, 0x6c, // GB(vec3(yiq.x, l
	0x65, 0x6e, 0x2a, 0x63, 0x6f, 0x73, 0x28, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x2c, 0x20, 0x6c, // en*cos(angle), l
	0x65, 0x6e, 0x2a, 0x73, 0x69, 0x6e, 0x28, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x20, 0x29, 0x20, // en*sin(angle) ) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x6c, // );.}.vec4 packFl
	0x6f, 0x61, 0x74, 0x54, 0x6f, 0x52, 0x67, 0x62, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // oatToRgba(float 
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, // _value).{.const 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, // vec4 shift = vec
	0x34, 0x28, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, // 4(256 * 256 * 25
	0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, // 6, 256 * 256, 25
	0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // 6, 1.0);.const v
	0x65, 0x63, 0x34, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ec4 mask = vec4(
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, // 0, 1.0 / 256.0, 
	0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // 1.0 / 256.0, 1.0
	0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, //  / 256.0);.vec4 
	0x63, 0x6f, 0x6d, 0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x76, 0x61, // comp = fract(_va
	0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // lue * shift);.co
	0x6d, 0x70, 0x20, 0x2d, 0x3d, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x2e, 0x78, 0x78, 0x79, 0x7a, 0x20, // mp -= comp.xxyz 
	0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // * mask;.return c
	0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, // omp;.}.float unp
	0x61, 0x63, 0x6b, 0x52, 0x67, 0x62, 0x61, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x76, // ackRgbaToFloat(v
	0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // ec4 _rgba).{.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, // st vec4 shift = 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, // vec4(1.0 / (256.
	0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, // 0 * 256.0 * 256.
	0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, 0x30, // 0), 1.0 / (256.0
	0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, //  * 256.0), 1.0 /
	0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, //  256.0, 1.0);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, // turn dot(_rgba, 
	0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, // shift);.}.vec2 p
	0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, // ackHalfFloat(flo
	0x61, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // at _value).{.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, // st vec2 shift = 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // vec2(256, 1.0);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, // const vec2 mask 
	0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, // = vec2(0, 1.0 / 
	0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6d, // 256.0);.vec2 com
	0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, // p = fract(_value
	0x20, 0x2a, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, //  * shift);.comp 
	0x2d, 0x3d, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x2e, 0x78, 0x78, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, // -= comp.xx * mas
	0x6b, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, // k;.return comp;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, // }.float unpackHa
	0x6c, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x72, 0x67, // lfFloat(vec2 _rg
	0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, // ).{.const vec2 s
	0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, // hift = vec2(1.0 
	0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, // / 256.0, 1.0);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x2c, 0x20, 0x73, // eturn dot(_rg, s
	0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, // hift);.}.float r
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x0a, // andom(vec2 _uv).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, // {.return fract(s
	0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x76, // in(dot(_uv.xy, v
	0x65, 0x63, 0x32, 0x28, 0x31, 0x32, 0x2e, 0x39, 0x38, 0x39, 0x38, 0x2c, 0x20, 0x37, 0x38, 0x2e, // ec2(12.9898, 78.
	0x32, 0x33, 0x33, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // 233) ) ) * 43758
	0x2e, 0x35, 0x34, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x66, // .5453);.}.vec3 f
	0x69, 0x78, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x28, 0x76, 0x65, 0x63, // ixCubeLookup(vec
	0x33, 0x20, 0x5f, 0x76, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, // 3 _v, float _lod
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, // , float _topLeve
	0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // lCubeSize).{.flo
	0x61, 0x74, 0x20, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x78, // at ax = abs(_v.x
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, // );.float ay = ab
	0x73, 0x28, 0x5f, 0x76, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // s(_v.y);.float a
	0x7a, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, // z = abs(_v.z);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, // loat vmax = max(
	0x6d, 0x61, 0x78, 0x28, 0x61, 0x78, 0x2c, 0x20, 0x61, 0x79, 0x29, 0x2c, 0x20, 0x61, 0x7a, 0x29, // max(ax, ay), az)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x3d, 0x20, // ;.float scale = 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // 1.0 - exp2(_lod)
	0x20, 0x2f, 0x20, 0x5f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, //  / _topLevelCube
	0x53, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x78, 0x20, 0x21, 0x3d, 0x20, // Size;.if (ax != 
	0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x78, 0x20, 0x2a, 0x3d, 0x20, // vmax) { _v.x *= 
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x79, 0x20, // scale; }.if (ay 
	0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x79, 0x20, // != vmax) { _v.y 
	0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, // *= scale; }.if (
	0x61, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, // az != vmax) { _v
	0x2e, 0x7a, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x72, // .z *= scale; }.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, // eturn _v;.}.vec2
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x42, 0x63, 0x35, 0x28, 0x73, 0x61, //  texture2DBc5(sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // , vec2 _uv).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x28, 0x5f, // turn texture2D(_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x2e, 0x78, 0x79, // sampler, _uv).xy
	0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x66, 0x61, 0x63, 0x74, 0x6f, // ;.}.mat3 cofacto
	0x72, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // r(mat4 _m).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // urn mat3(._m[1][
	0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, // 1]*_m[2][2]-_m[1
	0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, // ][2]*_m[2][1],._
	0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, // m[1][2]*_m[2][0]
	0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, // -_m[1][0]*_m[2][
	0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // 2],._m[1][0]*_m[
	0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, // 2][1]-_m[1][1]*_
	0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, // m[2][0],._m[0][2
	0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, // ]*_m[2][1]-_m[0]
	0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, // [1]*_m[2][2],._m
	0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, // [0][0]*_m[2][2]-
	0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, // _m[0][2]*_m[2][0
	0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, // ],._m[0][1]*_m[2
	0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, // ][0]-_m[0][0]*_m
	0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, // [2][1],._m[0][1]
	0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, // *_m[1][2]-_m[0][
	0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, // 2]*_m[1][1],._m[
	0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, // 0][2]*_m[1][0]-_
	0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, // m[0][0]*_m[1][2]
	0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, // ,._m[0][0]*_m[1]
	0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // [1]-_m[0][1]*_m[
	0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // 1][0].);.}.unifo
	0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x63, 0x6f, // rm vec4 u_adj_co
	0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, // lor;.uniform sam
	0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, // plerCube s_texCo
	0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x28, 0x6c, 0x6f, 0x63, 0x61, // lor;.layout(loca
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x30, 0x29, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, // tion = 0) out ve
	0x63, 0x34, 0x20, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x6f, // c4 out_color;.vo
	0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, // id main().{.vec4
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  color = texture
	0x43, 0x75, 0x62, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, // Cube(s_texColor,
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x7a, //  v_texcoord0.xyz
	0x29, 0x3b, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x3d, 0x20, 0x69, // );.int index = i
	0x6e, 0x74, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x77, // nt(v_texcoord0.w
	0x2a, 0x34, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // *4.0 + 0.5);.flo
	0x61, 0x74, 0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, // at alpha = index
	0x20, 0x3c, 0x20, 0x31, 0x20, 0x3f, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x20, 0x3a, //  < 1 ? color.z :
	0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x3c, 0x20, 0x32, 0x20, 0x3f, 0x20, 0x63, 0x6f, 0x6c, // .index < 2 ? col
	0x6f, 0x72, 0x2e, 0x79, 0x20, 0x3a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x3c, 0x20, 0x33, // or.y :.index < 3
	0x20, 0x3f, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x20, 0x3a, 0x20, 0x63, 0x6f, 0x6c, //  ? color.x : col
	0x6f, 0x72, 0x2e, 0x77, 0x3b, 0x0a, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // or.w;.out_color 
	0x3d, 0x20, 0x75, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2a, 0x20, // = u_adj_color * 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, 0x78, 0x79, // vec4(v_color0.xy
	0x7a, 0x2c, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, 0x61, 0x20, 0x2a, 0x20, // z, v_color0.a * 
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                               // alpha);.}..
};
